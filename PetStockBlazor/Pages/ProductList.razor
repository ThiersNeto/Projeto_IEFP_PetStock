@page "/products"
@using PetStockBlazor.Models
@using PetStockBlazor.Services
@inject FakeDataService DataService

<PageTitle>Products List</PageTitle>

<h3>Products List</h3>



<div class="row justify-content-center">
    @foreach (var product in products)
    {
        <div class="col-md-3 col-sm-6 mb-4"> 
            <div class="card shadow-sm d-flex flex-column" style="max-width: 250px; height: 100%; min-height: 380px;">
                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name"
                     style="width: 100%; height: 150px; object-fit: contain; padding: 10px;">
                <div class="card-body d-flex flex-column">
                    <h6 class="card-title">@product.Name</h6>
                    <p class="card-text" style="font-size: 0.9rem; flex-grow: 1;">@product.Description</p>
                    <p class="card-text"><strong>Price:</strong> $@product.Price</p>
                    <p class="card-text"><strong>Stock:</strong> @product.StockQuantity</p>

                    <div class="mt-auto">
                        <a href="/product/@product.Id" class="btn btn-primary btn-sm  w-100">View Details</a>
                        <button @onclick="() => SoftDeleteProduct(product.Id)" class="btn btn-danger btn-sm w-100 mt-2">Excluir</button>
                        <button @onclick="() => OpenStockMovementModal(product.Id)" class="btn btn-secondary btn-sm w-100 mt-2">Movimentar Estoque</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (selectedProductId.HasValue)
    {
    <div class="modal" style="display: block; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5); z-index: 1050;">
        <div class="modal-content" style="max-width: 500px; margin: 100px auto; background-color: white; padding: 20px; border-radius: 5px;">
                <h5>Registrar Movimentação de Estoque</h5>
                <div class="form-group">
                    <label for="quantity">Quantidade</label>
                    <input id="quantity" type="number" @bind="movementQuantity" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="type">Tipo</label>
                    <select id="type" @bind="movementType" class="form-control">
                        <option value="Entrada">Entrada</option>
                        <option value="Saída">Saída</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="description">Descrição</label>
                    <input id="description" type="text" @bind="movementDescription" class="form-control" />
                </div>
                <button @onclick="RegisterStockMovement" class="btn btn-primary">Registrar Movimentação</button>
                <button @onclick="CloseStockMovementModal" class="btn btn-secondary">Fechar</button>
                
        </div>
    </div>
}
    


@code {
    private List<Product> products = new();
    private int? selectedProductId;
    private int movementQuantity;
    private string movementType = "Entrada";
    private string movementDescription;

    protected override void OnInitialized()
    {
        products = DataService.GetProducts();
    }
   
    private void SoftDeleteProduct(int productId)
    {
        DataService.SoftDeleteProduct(productId); 
        products = DataService.GetProducts(); 
    }

    private void OpenStockMovementModal(int productId)
    {
        selectedProductId = productId;
    }

    private void CloseStockMovementModal()
    {
        selectedProductId = null;
    }

    private void RegisterStockMovement()
    {
        if (selectedProductId.HasValue && movementQuantity > 0)
        {
            products = DataService.GetProducts(); // Atualiza a lista de produtos
            CloseStockMovementModal(); // Fecha o modal
        }
    }

}